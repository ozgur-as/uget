name: ci
on:
  push:
    branches: [ main, master ]
    tags: [ "v*" ]
  pull_request:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-24.04, windows-latest ]
        config: [ Debug, RelWithDebInfo ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      # ---------- Linux deps ----------
      - name: Install deps (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            ninja-build pkg-config xvfb \
            libgtk-3-dev libglib2.0-dev \
            libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \
            libcurl4-openssl-dev libayatana-appindicator3-dev

      # ---------- Windows deps via vcpkg ----------
      - name: Setup vcpkg (Windows)
        if: runner.os == 'Windows'
        uses: microsoft/vcpkg-action@v0
        with:
          cacheHitVar: VCPKG_CACHE_HIT

      - name: Setup Ninja (Windows)
        if: runner.os == 'Windows'
        uses: seanmiddleditch/gha-setup-ninja@v4

      - name: Setup MSVC dev environment (x64)
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      # ---------- Configure ----------
      - name: Configure (Linux Debug)
        if: runner.os == 'Linux' && matrix.config == 'Debug'
        run: cmake --preset dev -DENABLE_MEGA=OFF
      - name: Configure (Linux RelWithDebInfo)
        if: runner.os == 'Linux' && matrix.config == 'RelWithDebInfo'
        run: cmake --preset rel -DENABLE_MEGA=OFF
      - name: Configure (Windows)
        if: runner.os == 'Windows'
        run: cmake --preset msvc-vcpkg -DCMAKE_BUILD_TYPE=${{ matrix.config }} -DWITH_GUI=OFF -DWITH_TRAY=OFF

      # ---------- Build ----------
      - name: Build (Linux Debug)
        if: runner.os == 'Linux' && matrix.config == 'Debug'
        run: cmake --build build/dev -- -v
      - name: Build (Linux RelWithDebInfo)
        if: runner.os == 'Linux' && matrix.config == 'RelWithDebInfo'
        run: cmake --build build/rel -- -v
      - name: Build (Windows)
        if: runner.os == 'Windows'
        run: cmake --build --preset msvc-vcpkg --config ${{ matrix.config }} -- -v

      # ---------- Test ----------
      - name: Test (Linux)
        if: runner.os == 'Linux'
        run: |
          if command -v xvfb-run >/dev/null 2>&1; then
            xvfb-run -a ctest --test-dir ${{ matrix.config == 'Debug' && 'build/dev' || 'build/rel' }} --output-on-failure -LE net
          else
            ctest --test-dir ${{ matrix.config == 'Debug' && 'build/dev' || 'build/rel' }} --output-on-failure -LE net
          fi
      - name: Test (Windows)
        if: runner.os == 'Windows'
        run: ctest --test-dir build/msvc -C ${{ matrix.config }} --output-on-failure -LE net

      # ---------- Artifacts ----------
      - name: Upload build dir
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-${{ matrix.config }}
          path: build/**
          if-no-files-found: warn
